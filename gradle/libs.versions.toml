# gradle/libs.versions.toml

[versions]
# Gradle Plugins
agp = "8.10.0" # Android Gradle Plugin 버전
kotlin = "2.0.21" # Kotlin 버전 (이 버전에 맞춰 Compose Compiler 버전을 선택해야 함)
kotlinJvm = "2.0.21" # jetbrainsKotlinJvm과 동일하게 설정

# Kotlin Compiler Extension for Compose (Kotlin 버전과 BOM 버전에 맞춰 조정)
# Kotlin 2.0.x 에는 Compose Compiler 1.6.10 이상이 호환됩니다.
composeCompiler = "1.6.10" # 또는 사용하는 Compose BOM (2024.09.00)에 맞는 최신 버전을 명시 (대부분 1.6.x 이상)

# AndroidX Libraries
coreKtx = "1.16.0"
lifecycleRuntimeKtx = "2.9.2"
activityCompose = "1.10.1" # activity-compose 버전
navigationCompose = "2.8.0-beta02" # 최신 안정/베타 버전 (Compose Navigation)

# Compose (BOM)
composeBom = "2024.09.00"

# Hilt (Dagger Hilt)
hilt = "2.51.1" # Hilt 최신 안정 버전 (2.48 -> 2.51.1)
hiltNavigationCompose = "1.2.0" # Hilt Navigation Compose 최신 안정 버전

# Networking (Retrofit, OkHttp)
retrofit = "2.9.0"
okhttpLoggingInterceptor = "4.12.0" # OkHttp 최신 안정 버전

# Local Database (Room)
room = "2.7.0-alpha02" # Room 최신 안정 버전 또는 알파 버전
datastore = "1.1.7"

# Coroutines
coroutines = "1.8.1" # Coroutines 최신 안정 버전

# Testing
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"

# Existing (often for View-based projects, can be removed if not used)
appcompat = "1.6.1"
material = "1.10.0"


[libraries]
# AndroidX General
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-lifecycle-viewmodel-compose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "lifecycleRuntimeKtx" } # ViewModel for Compose

# Compose UI
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }

# Compose Navigation
androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigationCompose" }

# Hilt
hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
hilt-compiler = { group = "com.google.dagger", name = "hilt-compiler", version.ref = "hilt" } # KAPT or KSP
hilt-navigation-compose = { group = "androidx.hilt", name = "hilt-navigation-compose", version.ref = "hiltNavigationCompose" }

# Networking
retrofit = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
retrofit-converter-gson = { group = "com.squareup.retrofit2", name = "converter-gson", version.ref = "retrofit" }
okhttp-logging-interceptor = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "okhttpLoggingInterceptor" }

# Local Database
room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" } # KAPT or KSP
room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "room" } # Coroutine support for Room
androidx-datastore-preferences = { group = "androidx.datastore", name = "datastore-preferences", version.ref = "datastore" }

# Coroutines
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "coroutines" }

# Testing
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }

# Existing (often for View-based projects)
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }


[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlinJvm" } # jetbrainsKotlinJvm 대신 kotlinJvm 사용
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" } # Kapt 플러그인 추가
hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "hilt" } # Hilt Gradle 플러그인 추가